// registration.controller.min.js v1.0
define("registration_model registration_contacts_model utf8_encode_helper sha1_helper form_library settings_module".split(" "),function(d,e){return Backbone.Controller.extend({initialize:function(){console.log("Backbone.Controller.RegistrationController has been initialized.")},options:{settingFormDate:"registration_form_date",dataForm:"registration",inputContainer:"p",sessionTime:1800,collections:{}},setCollections:function(){this.settings=I.Settings.Controller;this.options.collections.registration= I.Registration.Collections.Registration;this.options.collections.contacts=I.Registration.Collections.Contacts},fetchCollections:function(){var a=this.options.collections;a.registration.fetch();a.contacts.fetch()},createModels:function(){var a=this.options.collections;0==a.registration.length&&(a.registration.create(new d({})),console.log("New registration model has been added to collection."));0==a.contacts.length&&(a.contacts.create(new e({})),console.log("New registration contacts model has been added to collection."))}, setFormDateSetting:function(){this.settings.get(this.options.settingFormDate)||this.settings.add({setting:this.options.settingFormDate,value:0,title:"Registration Form Date",description:"Set the date of the registration if form data has been updated."})},warning:function(){$("[data-form-continue=registration]").removeClass("hide")},response:function(a){"yes"==a?$("[data-form-continue=registration]").addClass("hide"):(this.resetForm(),Backbone.history.navigate("register/cancelled",!0))},expired:function(){this.resetForm(); Backbone.history.navigate("register/session-expired",!0)},checkExpiration:function(){var a=this;this.form.checkExpiration(function(){I.Library.Form.reset({form:a.options.dataForm});a.initForm()})},initForm:function(){var a=this,c=a.options;a.setCollections();a.setFormDateSetting();a.fetchCollections();a.createModels();a.form=I.Library.Form;a.form.init({settings:I.Settings.Controller,settingFormDate:c.settingFormDate,form:c.dataForm,inputContainer:c.inputContainer,collections:c.collections,sessionTime:c.sessionTime, warning:function(){a.warning()},response:{yes:function(){a.response("yes")},no:function(){a.response("no")}},expired:function(){a.expired()}});a.checkExpiration()},resetForm:function(){var a=this;I.Library.Form.reset({form:a.options.dataForm,init:function(){a.initForm()}})},submitRegistrationForm:function(){var a=this,c=I.Helper.Sha1($("#registration-index-page [name=email]").val()).match(/.{1,8}/g),b={};I.Library.Form.validate(a.options.dataForm)&&(b.person={},b.person.firstname=$("[name=firstname]").val(), b.person.lastname=$("[name=lastname]").val(),b.person.gender=$("[name=gender]").val(),b.person.birth_month=$("[name=birth_month]").val(),b.contacts={},b.contacts.email=$("[name=email]").val(),b.contacts.phone=$("[name=phone]").val(),b.contacts.direction_address=$("[name=direction_address]").val(),b.subscription={},b.subscription=I.Library.Form.getGroupedValue($("[data-form-input-group=subscription]"),!0),b.confirmed=I.Library.Form.getValue($("[name=confirmed]")),b[I.Token.registration]=c[0],Backbone.ajax({url:I.BaseURL+ "/data/json.php?process=register",type:"post",data:b,dataType:"json",cache:!1,success:function(b){Backbone.history.navigate("register/success",!0);a.resetForm();I.Token.registration=b.token},error:function(){I.Library.Form.enable(a.options.dataForm,!0)}}))}})});