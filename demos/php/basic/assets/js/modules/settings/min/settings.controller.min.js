// settings.controller.min.js v1.0
define(["settings_model"],function(d){return Backbone.Controller.extend({initialize:function(){console.log("Backbone.Controller.SettingsController has been initialized.");this.settings=I.Settings.Collection;this.settings.fetch();this.get("storage_cache_time")||(this.add({setting:"sync_data_on_login",value:!0,title:"Sync Data on Log In",description:"Sync the remote data upon successful log in."}),this.add({setting:"sync_data_on_page_load",value:!0,title:"Sync Data on Page Load",description:"Sync the remote data on page load."}), this.add({setting:"sync_data_in_process",value:!0,title:"Sync Data in Process",description:"Set true if syncing is in process and false if done."}),this.add({setting:"auto_sync_data",value:!1,title:"Auto-sync Data",description:"Auto-sync the remote data."}),this.add({setting:"cache_time_type",value:"minute",title:"Cache Time Type",description:"Select hour or second for time type."}),this.add({setting:"storage_cache_time",value:60,title:"Storage Cache Time",description:"Set the expiration time before auto-syncing the remote data."}), this.add({setting:"date_time_synced",value:0,title:"Date and Time Last Synced",description:"Date and time of recent syncing of the remote data."}))},models:function(){return this.settings.models},collection:function(){return this.settings},add:function(a){return void 0==this.get(a.setting)?this.settings.create(new d(a)):this.update(a)},get:function(a,b){var c=this.settings.find(function(b){return b.get("setting")==a});return void 0==c?void 0:b?c:c.get("value")},update:function(a){var b=this.get(a.setting, !0),c=!0;if(b)b.save(a,{error:function(){c=!1}});else return!1;return c},remove:function(a){a=this.get(a,!0);var b=!0;if(a)a.destroy({error:function(){b=!1}});else return!1;return b}})});